@using Presentation.Extensions
@model ERP_Condominios_Solution.ViewModels.MovimentoEstoqueProdutoViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Estoque</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaDashboardEstoque", "Estoque")">Dashboard - Estoque</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaEstoqueProduto", "Estoque")">Estoque - Consulta</a>
            </li>
            <li class="active">
                <strong>Movimentação Avulsa</strong>
            </li>
        </ol>
        <br />
    </div>
    @using (Html.BeginForm("IncluirMovimentacaoAvulsa", "Estoque", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id = "pwd-container1" }))
    {
        <div class="row">
            <div class="col-lg-12 col-md-12 col-xs-12">
                <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Informações Gerais</h5>
                    </div>
                    <div class="ibox-content">
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">Fechar</button>
                                @Html.ValidationSummary(false, "", new { @class = "test-danger" })
                            </div>
                        }
                        <div id="alertContainer"></div>
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                @Html.ButtonActionSubmit(text: "Confirma Inclusão da Movimentação Avulsa", htmlAttributes: new { id = "basictoast" })
                                @Html.ButtonLinkIndex(text: "Voltar", controller: "Estoque", action: "MontarTelaEstoqueProduto")
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-2 col-md-2 col-xs-12">
                                Operação*
                                @Html.DropDownListFor(x => x.MOEP_IN_TIPO_MOVIMENTO, (SelectList)ViewBag.Lista, "Selecionar", new { @class = "form-control", , onchange = "ValidaDiv($(this).val())" , id = "operacao", autofocus = true  })
                                @Html.ValidationMessageFor(m => m.MOEP_IN_TIPO_MOVIMENTO, "", new { @style = "color:red" })
                            </div>
                            <div id="entradas" class="col-lg-2 col-md-2 col-xs-12" style="display:none">
                                Tipo de Movimentação*
                                @Html.DropDownListFor(x => x.MOEP_IN_OPERACAO, (SelectList)ViewBag.Entradas, "Selecionar", new { @class = "form-control", id = "tipoEntrada", autofocus = true  })
                                @Html.ValidationMessageFor(m => m.MOEP_IN_OPERACAO, "", new { @style = "color:red" })
                            </div>
                            <div id="saidas" class="col-lg-2 col-md-2 col-xs-12" style="display:none">
                                Tipo de Movimentação*
                                @Html.DropDownListFor(x => x.MOEP_IN_OPERACAO, (SelectList)ViewBag.Saidas, "Selecionar", new { @class = "form-control", id = "tipoSaida", autofocus = true  })
                                @Html.ValidationMessageFor(m => m.MOEP_IN_OPERACAO, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-2 col-md-2 col-xs-12">
                                Data*
                                @Html.TextBoxFor(m => m.MOEP_DT_MOVIMENTO, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", id = "data", autofocus = true  })
                                @Html.ValidationMessageFor(m => m.MOEP_DT_MOVIMENTO, "", new { @style = "color:red" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-12">
                                Produto*
                                <select name="PROD_CD_ID" id="lstProd" class="form-control" data-val="true" style="display: none;">
                                    <option>Selecionar</option>
                                </select>
                            </div>
                            <div class="col-lg-2 col-md-2 col-xs-12">
                                Quantidade*
                                @Html.TextBoxFor(m => m.MOEP_QN_QUANTIDADE, new { @class = "form-control", id = "quant", autofocus = true  })
                                @Html.ValidationMessageFor(m => m.MOEP_QN_QUANTIDADE, "", new { @style = "color:red" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-12 col-md-12 col-xs-12">
                                Justificativa da Movimentação
                                @Html.TextBoxFor(m => m.MOEP_DS_JUSTIFICATIVA, new { @class = "form-control", id = "motivo", autofocus = true })
                                @Html.ValidationMessageFor(m => m.MOEP_DS_JUSTIFICATIVA, "", new { @style = "color:red" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>

@section Styles {
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/summernoteStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    <link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    <link href="~/Content/plugins/select2/select2.min.css" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/summernote")
    @Scripts.Render("~/plugins/touchSpin")
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
    <script src="~/Scripts/uploadAnexo.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    <script src="~/Scripts/plugins/select2/select2.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>

    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
            $("#data").mask("99/99/9999");
            $("#hora").mask("99:99");
            $("#datatime").mask("99/99/9999 99:99:99");
        });
    </script>
    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
                .css("display", "normal")
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Selecione uma data",
                    text: false
                });
        });
    </script>
    <script type="text/javascript" language="javascript">
        $(function () {
            $('.datetime-picker').datetimepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    controlType: 'select',
                    showSecond: "false",
                    timeFormat: 'HH:mm',
                    locale: 'pt-br',
                    hourText: 'Hora',
                    minuteText: 'Minuto',
                    secondText: 'Segundo',
                    currentText: 'Agora',
                    closeText: 'Feito',
                    showOn: "focus"
                }
            )
                .css("display", "normal")
                .next("button").button({
                    icons: { primary: "ui-icon-calendar" },
                    label: "Selecione uma data",
                    text: false
                });
        });
    </script>

    <script type="text/javascript">
        function ValidaDiv(operacao) {
            if (operacao == '2') {
                $("#entradas").hide();
                $("#saidas").show();
            } else if (operacao == '1') { //Se o tempo for mé igual a 2 mostra a divCpf
                $("#entradas").show();
                $("#saidas").hide();
            }
        }

        $(document).ready(function () {
            ValidaDiv($('#operacao').val());
        });
    </script>

     <script>
        $("#lstProd").select2({
            //data: filterSelect,
            ajax: {
                url: '../Produto/BuscaNome',
                type: 'POST',
                data: function (params) {
                    var query = {
                        nome: params.term
                    }
                    return query
                },
                processResults: function (data) {
                    console.log(data);
                    return {
                        results: data
                    }
                }
            },
            placeholder: 'Busque por NOME',
            minimumInputLength: 1
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Inclusão em andamento!')
            });

            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                    + shortCutFunction
                    + "](\""
                    + msg
                    + (title ? "\", \"" + title : '')
                    + "\")\n\ntoastr.options = "
                    + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    <script>
        function setVolta() {
            $('#btnVolta').val(1);
            $('#btnSubmit').click();
        }
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
