@using Presentation.Extensions
@model ERP_Condominios_Solution.ViewModels.BancoViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="modalContainer">
        <div id="modal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        @*Titulo gerado dinamicamente*@
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @*Gerado dinamicamente*@
                    </div>
                    <div class="modal-footer">
                        <button onclick="limpaModal()" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="page-title"> 
        <h3 class="title">Bancos & Contas Bancárias</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaDashboardCadastro", "BaseAdmin")">Dashboard -  Cadastros</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaBanco", "Banco")">Bancos</a>
            </li>
            <li class="active">
                <strong>Bancos - Consulta & Edição</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Bancos - Consulta & Edição</h5>
                </div>
                @using (Html.BeginForm("EditarBanco", "Banco", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                {
                    <div class="ibox-content">
                        @Html.AntiForgeryToken()
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">Fechar</button>
                                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            </div>
                        }
                        <div class="row">
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    @Html.HiddenFor(m => m.BANC_CD_ID)
                                    @Html.HiddenFor(m => m.BANC_IN_ATIVO)
                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                    Código*
                                    @Html.TextBoxFor(m => m.BANC_SG_CODIGO, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.BANC_SG_CODIGO, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Nome*
                                    @Html.TextBoxFor(m => m.BANC_NM_NOME, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.BANC_NM_NOME, "",new { @style="color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @if (ViewBag.Perfil == "ADM" || ViewBag.Perfil == "GER")
                            {
                                @Html.ButtonActionSubmit(text: "Confirma Edição do Banco", htmlAttributes: new { id = "basictoast" })
                            }
                            @if (ViewBag.Perfil == "ADM" || ViewBag.Perfil == "GER")
                            {
                                @Html.ButtonLinkIndex(text: "Incluir Nova Conta Bancária", action: "IncluirConta", controller: "Banco", buttonClass: "primary")
                            }
                            @Html.ButtonLinkIndex(text: "Voltar", action: "VoltarBaseBanco", controller: "Banco")
                        </div>
                    </div>
                }
            </div>
         </div>
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Contas Bancárias</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                            @if (Model.CONTA_BANCO != null && Model.CONTA_BANCO.Count > 0)                                        
                            {
                                <table class="table table-striped table-bordered table-hover dataTables-example">
                                    <thead style ="background-color:lightsteelblue">
                                        <tr>
                                            <th>Agência</th>   
                                            <th>Nome Agência</th>
                                            <th>Conta</th>   
                                            <th>Tipo de Conta</th>
                                            <th>Data Abertura</th>   
                                            <th>Nome Gerente</th>
                                            <th>Contato</th>
                                            <th>Padrão</th>
                                            <th class="td-one-action">Ações</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var cond in Model.CONTA_BANCO)
                                        {
                                            <tr>
                                                <td>@cond.COBA_NR_AGENCIA</td>
                                                <td>@cond.COBA_NM_AGENCIA</td>
                                                <td>@cond.COBA_NR_CONTA</td>
                                                <td>@cond.TIPO_CONTA.TICO_NM_NOME</td>
                                                <td>@cond.COBA_DT_ABERTURA.ToShortDateString()</td>
                                                <td>@cond.COBA_NM_GERENTE</td>
                                                <td>@cond.COBA_NR_TELEFONE</td>
                                                @if (cond.COBA_IN_CONTA_PADRAO == 1)
	                                            {
                                                    <td><span class="badge badge-success">Sim</span></td>
                                                }
                                                else
                                                {
                                                    <td><span class="badge badge-primary">Não</span></td>
                                                }
                                                <td class="td-one-action">
                                                    @Html.TableLinkDetails(cond.COBA_CD_ID, "EditarConta","fa-edit", "Editar/Consultar")
                                                    @if (ViewBag.Perfil == "ADM" || ViewBag.Perfil == "GER")
                                                    {
                                                        if (cond.COBA_IN_ATIVO == 1)
                                                        {
                                                            <span style="color: #337ab7; cursor:pointer;" alt="Excluir" class="tbl-link fa-lg fa fa-trash-o" onclick="ShowModalExcluir('/Banco/ExcluirConta/@cond.COBA_CD_ID')" title="Excluir"></span>
                                                        }
                                                        else
                                                        {
                                                            <span style="color: #337ab7; cursor:pointer;" alt="Reativar" class="tbl-link fa-lg fa fa-refresh" onclick="ShowModalReativar('/Banco/ReativarConta/@cond.COBA_CD_ID')" title="Reativar"></span>
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-lg-4 col-md-4 col-xs-2">

                                    </div>
                                    <div style="border: 5px solid #F6A54A; padding: 10px; border-radius: 8px 8px; " class="col-lg-4 col-md-4 col-xs-8">
                                        <h2 style="font-weight: bold">Nenhuma conta cadastrada nesse banco</h2>
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-xs-2">

                                    </div>
                                </div>
                            }
                     </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
   
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/toastr")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>

   
    <script>
        $(function () {
            limpaModal();
        });

        function limpaModal() {
            $('#btnModal').remove();
            $('#modalTitle').remove();
        }

        function ShowModalExcluir(url) {
            $('#modal').find('.modal-footer').prepend('<a id="btnModal" alt="Desativar" class="btn btn-primary" href="' + url + '" target="_self" title="Desativar">Confirmar</a>');
            $('#modal').find('.modal-body').html('Confirma exclusão de conta bancária?');
            $('#modal').find('.modal-header').prepend('<h5 id="modalTitle" class="modal-title">Confimar Exclusão</h5>');
            $('#modal').modal('show');
        }

        function ShowModalReativar(url) {
            $('#modal').find('.modal-footer').prepend('<a id="btnModal" alt="Reativar" class="btn btn-primary" href="' + url + '" target="_self" title="Reativar">Confirmar</a>');
            $('#modal').find('.modal-body').html('Confirma reativação de conta bancária?');
            $('#modal').find('.modal-header').prepend('<h5 id="modalTitle" class="modal-title">Confimar Reativação</h5>');
            $('#modal').modal('show');
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'excel', title: 'Conta_Planilha' },
                    { extend: 'pdf', title: 'Conta_Pdf' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });

           

        });

    </script>



    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Edição em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
